{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions","actions"],"sources":["C:/Users/pnlia/OneDrive/Desktop/Mind the Code/MindTheCodeFinalProject/FrontEnd/src/store/cart-slice.js"],"sourcesContent":["\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n        changed: false\r\n    },\r\n    reducers: {\r\n        replaceCart(state, action)\r\n        {\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items;\r\n        },\r\n        addItemToCart(state, action) \r\n        {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            state.changed = true;\r\n            if( !existingItem )\r\n            {\r\n                state.items.push({\r\n                    id: newItem.id, \r\n                    price: newItem.price, \r\n                    quantity: 1, \r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                });\r\n            }\r\n            else\r\n            {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n            }\r\n        },\r\n        removeItemFromCart(state, action) \r\n        {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            state.totalQuantity--;\r\n            state.changed = true;\r\n            if( existingItem.quantity === 1 )\r\n            {\r\n                state.items = state.items.filter(item => item.id !== id);\r\n            }\r\n            else\r\n            {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;"],"mappings":"AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,CAAC;IAChBC,OAAO,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACNC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EACzB;MACID,KAAK,CAACJ,aAAa,GAAGK,MAAM,CAACC,OAAO,CAACN,aAAa;MAClDI,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO,CAACP,KAAK;IACtC,CAAC;IACDQ,aAAaA,CAACH,KAAK,EAAEC,MAAM,EAC3B;MACI,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,YAAY,GAAGL,KAAK,CAACL,KAAK,CAACW,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACrER,KAAK,CAACJ,aAAa,EAAE;MACrBI,KAAK,CAACH,OAAO,GAAG,IAAI;MACpB,IAAI,CAACQ,YAAY,EACjB;QACIL,KAAK,CAACL,KAAK,CAACc,IAAI,CAAC;UACbD,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdE,KAAK,EAAEN,OAAO,CAACM,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAER,OAAO,CAACM,KAAK;UACzBjB,IAAI,EAAEW,OAAO,CAACS;QAClB,CAAC,CAAC;MACN,CAAC,MAED;QACIR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGR,OAAO,CAACM,KAAK;MACrE;IACJ,CAAC;IACDI,kBAAkBA,CAACd,KAAK,EAAEC,MAAM,EAChC;MACI,MAAMO,EAAE,GAAGP,MAAM,CAACC,OAAO;MACzB,MAAMG,YAAY,GAAGL,KAAK,CAACL,KAAK,CAACW,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DR,KAAK,CAACJ,aAAa,EAAE;MACrBI,KAAK,CAACH,OAAO,GAAG,IAAI;MACpB,IAAIQ,YAAY,CAACM,QAAQ,KAAK,CAAC,EAC/B;QACIX,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACoB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAED;QACIH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;MAC1E;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMM,WAAW,GAAGxB,SAAS,CAACyB,OAAO;AAE5C,eAAezB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}